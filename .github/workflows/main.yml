name: example
on: push
jobs:

  build_skim:
    runs-on: ubuntu-latest
    container: rootproject/root-conda:${{ matrix.version }}
    continue-on-error: ${{ matrix.allow_failure }}
    strategy:
      matrix:
       version: [6.18.04]
       allow_failure: [false]
       include:
         - version: latest
           allow_failure: true

    steps:
      - name: checkout repository    # need to checkout repository so that it can see the file skim.cxx
        uses: actions/checkout@v2

      - name: build
        run: |
          COMPILER=$(root-config --cxx)
          FLAGS=$(root-config --cflags --libs)    # adding proper flags so that it can compile properly
          $COMPILER -g -O3 -Wall -Wextra -Wpedantic -o skim skim.cxx $FLAGS


      - uses: actions/upload-artifact@v2    #to pass executable to the job skim
        with:
          name: skim${{ matrix.version }}
          path: skim


  skim:
    needs: build_skim
    runs-on: ubuntu-latest
    container: rootproject/root-conda:6.18.04   # we run root to run the skim
    steps:
      - name: checkout repository
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2 #to get executable from previous job
        with:
          name: skim6.18.04

      - name: skim
        run: |
          chmod +x ./skim  # to the executable a real executable!
          ./skim root://eospublic.cern.ch//eos/root-eos/HiggsTauTauReduced/GluGluToHToTauTau.root skim_ggH.root 19.6 11467.0 0.1

      - uses: actions/upload-artifact@v2    #uploading output file from skimming
        with:
          name: skim_ggH
          path: skim_ggH.root


  plot:
    needs: skim
    runs-on: ubuntu-latest
    container: rootproject/root-conda:6.18.04  # need root and python to run plotting
    steps:
      - name: checkout repository    # again checking out repository
        uses: actions/checkout@v2

     - uses: actions/download-artifact@v2   # downloading root file previously produced
       with:
         name: skim_ggH

     - name: plot 
       run: python histograms.py skim_ggH.root ggH hist_ggH.root  # creating the plot

     - uses: actions/upload-artifact@v2   # uploading the plot
       with:
         name: histograms
         path: hist_ggH.root

